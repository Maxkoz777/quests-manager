version: "3"

services:
  db:
    container_name: quests_postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: quests
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:23.0.6
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    command: ["start-dev"]
    networks:
      - postgres
    depends_on:
      - db
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - postgres

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    volumes:
      - zk_data:/var/lib/zookeeper/data
    ports:
      - "9092:9092"
      - "9093:9093" # Expose an additional port for the OUTSIDE listener
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093 # Changed OUTSIDE listener to use port 9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - postgres
    depends_on:
      - zookeeper

  eureka-server:
    container_name: eureka-server
    image: maxkoz777/qm-eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - db
      - kafka
    networks:
      - postgres

  configuration-service:
    container_name: configuration-service
    image: maxkoz777/qm-configuration-service
    ports:
      - "8084:8084"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
    depends_on:
      - eureka-server
    networks:
      - postgres

  gateway:
    container_name: gateway
    image: maxkoz777/qm-gateway
    ports:
      - "8085:8085"
    environment:
      EUREKA_HOST: eureka-server
    depends_on:
      - configuration-service
    networks:
      - postgres

  user-service:
    container_name: user-service
    image: maxkoz777/qm-user-service
    ports:
      - "8082:8082"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DB_HOST: db
      KEYCLOAK_HOST: keycloak
    depends_on:
      - configuration-service
    networks:
      - postgres

  order-service:
    container_name: order-service
    image: maxkoz777/qm-order-service
    ports:
      - "8081:8081"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DB_HOST: db
      KEYCLOAK_HOST: keycloak
    depends_on:
      - configuration-service
    networks:
      - postgres

  payment-service:
    container_name: payment-service
    image: maxkoz777/qm-payment-service
    ports:
      - "8083:8083"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DB_HOST: db
      KEYCLOAK_HOST: keycloak
    depends_on:
      - configuration-service
    networks:
      - postgres

  fraud-service:
    container_name: fraud-service
    image: maxkoz777/qm-fraud-service
    ports:
      - "8087:8087"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DB_HOST: db
    depends_on:
      - configuration-service
    networks:
      - postgres

  notification-service:
    container_name: notification-service
    image: maxkoz777/qm-notification-service
    ports:
      - "8086:8086"
    environment:
      EUREKA_HOST: eureka-server
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DB_HOST: db
    depends_on:
      - configuration-service
    networks:
      - postgres

  front:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    volumes:
      - ./frontend/nginx/nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    ports:
      - 3000:80
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  kafka_data:
  zk_data:
